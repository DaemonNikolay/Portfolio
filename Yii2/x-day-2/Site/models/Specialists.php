<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "specialists".
 *
 * @property integer $id
 * @property string $surname
 * @property string $name
 * @property string $patronymic
 * @property string $email
 * @property string $phone
 * @property string $image
 * @property string $specialty
 */
class Specialists extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'specialists';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['surname', 'name', 'patronymic', 'email', 'phone', 'specialty'], 'required'],
            [['surname', 'name', 'patronymic', 'email', 'phone', 'image', 'specialty'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'surname' => 'Фамилия',
            'name' => 'Имя',
            'patronymic' => 'Отчество',
            'email' => 'E-mail',
            'phone' => 'Телефон',
            'image' => 'Фото',
            'specialty' => 'Специальность'
        ];
    }

    //saving image
    public function saveImage($filename)
    {
        $this->image = $filename;
        return $this->save(false);
    }

    //get image
    public function getImage()
    {
        return ($this->image) ? '/web/uploads/' . $this->image : '/web/no-image.png';
    }

    //delete image
    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }

    //returm delete image
    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    //get specialist
    public function getSpecialist()
    {
        return $this->hasOne(Specialists::className(), ['uid' => 'specialist_uid']);
    }
}
